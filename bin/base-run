#!/usr/bin/env bash

set -e
DIR=$(cd `dirname $0` && pwd)

function show_help() {
    cat << EOF
Uses the HelloSign OpenAPI ${SDK_NAME} SDK to make a request to the HelloSign API
-a          Auth type, one of "apikey" or "oauth"
-k          Auth key.
            If -a=apikey, pass API Key.
            If -a=oauth, pass OAuth Bearer Token.
-s          The server to use, must be like "api.hellosign.com"
-f          A valid JSON file containing all request data
-j          A base64-encoded JSON string. Replaces -f
-h          display this help and exit

Example if using a JSON file:
    ./${SDK_RUN} \\
        -a apikey \\
        -k 4e0a8a8bd9fea228a1de515a43a75ded2e495471b830069cc8e1821c13c31ce4 \\
        -s "api.qa-hellosign.com" \\
        -f "\$PWD/test_fixtures/accountCreate-example_01.json"

Example if using a base64-encoded JSON string:
    ./${SDK_RUN} \\
        -a apikey \\
        -k 4e0a8a8bd9fea228a1de515a43a75ded2e495471b830069cc8e1821c13c31ce4 \\
        -s "api.qa-hellosign.com" \\
        -j "ewogICJvcGVyYXRpb25JZCI6ICJhY2NvdW50Q3JlYXRlIiwKICAicGFyYW1ldGVycyI6IHt9LAogICJkYXRhIjogewogICAgImVtYWlsX2FkZHJlc3MiOiAic2lnbmVyMUBoZWxsb3NpZ24uY29tIgogIH0sCiAgImZpbGVzIjoge30KfQo="
EOF
}

while getopts ":a:k:s:e::f:j:h" opt; do
    case $opt in
        a) AUTH_TYPE="$OPTARG"
        ;;
        k) AUTH_KEY="$OPTARG"
        ;;
        s) SERVER="$OPTARG"
        ;;
        f) JSON_FILE="$OPTARG"
        ;;
        j) JSON_STRING="$OPTARG"
        ;;
        h) show_help && exit 0
        ;;
        \?) echo "Invalid option -$OPTARG" >&2
        ;;
    esac
done

if [[ -z "$1" ]]; then
    show_help
    exit 1
fi

if [[ "${AUTH_TYPE}" != "apikey" &&
      "${AUTH_TYPE}" != "oauth"
   ]]; then
    printf "Invalid auth type (-a) value: ${AUTH_TYPE}\n\n"
    show_help
    exit 1
fi

if [[ ! -z "${JSON_FILE}" ]] && [[ ! -f "${JSON_FILE}" ]]; then
    printf "Invalid file (-f) value: ${JSON_FILE}\n"
    printf "Make sure file exists and is accessible\n\n"
    show_help
    exit 1
fi

if [[ -z "${JSON_FILE}" ]] && [[ -z "${JSON_STRING}" ]]; then
    printf "You must specify either a JSON file (-f) or a base64-encoded JSON string (-j)\n\n"
    show_help
    exit 1
fi

if [[ -z "${AUTH_KEY}" ]] || [[ -z "${SERVER}" ]]; then
    printf "Missing argument(s).\n\n"
    show_help
    exit 1
fi
